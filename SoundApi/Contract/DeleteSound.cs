// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Contract
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct DeleteSound : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static DeleteSound GetRootAsDeleteSound(ByteBuffer _bb) { return GetRootAsDeleteSound(_bb, new DeleteSound()); }
  public static DeleteSound GetRootAsDeleteSound(ByteBuffer _bb, DeleteSound obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DeleteSound __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Contract.DeleteSound> CreateDeleteSound(FlatBufferBuilder builder,
      int id = 0) {
    builder.StartTable(1);
    DeleteSound.AddId(builder, id);
    return DeleteSound.EndDeleteSound(builder);
  }

  public static void StartDeleteSound(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static Offset<Contract.DeleteSound> EndDeleteSound(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Contract.DeleteSound>(o);
  }
};


}
